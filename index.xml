<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trevorch</title>
    <link>https://trevorch.github.io/</link>
    <description>Recent content on Trevorch</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
        <atom:link href="https://trevorch.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://trevorch.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://trevorch.github.io/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://user.xupng.cn//link/ZaUZbKeuvu8AFheY?mu=2&#34;&gt;https://user.xupng.cn//link/ZaUZbKeuvu8AFheY?mu=2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xxoo.men/link/K8NXTngqHox1nogn?mu=2&#34;&gt;https://xxoo.men/link/K8NXTngqHox1nogn?mu=2&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Archlinux 安装及配置</title>
      <link>https://trevorch.github.io/post/linux/archlinux/install/</link>
      <pubDate>Sat, 28 Mar 2020 12:40:24 +0800</pubDate>
      
      <guid>https://trevorch.github.io/post/linux/archlinux/install/</guid>
      
        <description>&lt;h2 id=&#34;下载archlinux-iso镜像&#34;&gt;下载Archlinux ISO镜像&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://mirrors.163.com/archlinux/iso/2020.03.01/archlinux-2020.03.01-x86_64.iso&#34;&gt;http://mirrors.163.com/archlinux/iso/2020.03.01/archlinux-2020.03.01-x86_64.iso&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装virtualbox&#34;&gt;安装VirtualBox&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://download.virtualbox.org/virtualbox/6.1.4/VirtualBox-6.1.4-136177-Win.exe&#34;&gt;https://download.virtualbox.org/virtualbox/6.1.4/VirtualBox-6.1.4-136177-Win.exe&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;创建virtualbox虚拟机并挂载archlinux镜像启动虚拟机&#34;&gt;创建VirtualBox虚拟机，并挂载Archlinux镜像，启动虚拟机&lt;/h2&gt;
&lt;h2 id=&#34;分区&#34;&gt;分区&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;分区方案：
sda1----200M----/boot
sda2----1G------swap
sda3----剩余空间------/

#fdisk /dev/sda
创建sda1分区：
输入n
回车
输入开始扇区,默认回车
输入结束扇区，要创建200M的分区,应该输入：+200M；

创建sda2分区：
输入n
回车
输入开始扇区,默认回车
输入结束扇区，要创建1G的分区,应该输入：+1G；

创建sda3分区：
输入n
回车
输入开始扇区,默认回车
输入结束扇区，使用剩余全部空间，回车；
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;格式化分区并挂载&#34;&gt;格式化分区并挂载&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# mkfs.ext4 /dev/sda1
# mkfs.ext4 /dev/sda3
# mkswap /dev/sda2
# swapon /dev/sda2
# 
# mount /dev/sda3 /mnt
# mkdir /mnt/boot
# mount /dev/sda1 /mnt/boot
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;修改镜像源&#34;&gt;修改镜像源&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# nano /etc/pacman.d/mirrorlist
在最顶处添加：
Server = https://mirrors.163.com/archlinux/$repo/os/$arch
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;安装基本系统&#34;&gt;安装基本系统&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# pacstrap /mnt base base-devel
# pacman -Syu # 更新
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;配置系统&#34;&gt;配置系统&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;安装grub引导程序
# pacstrap /mnt grub-bios
生成系统挂载表
# genfstab -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
切到新安装的系统
# arch-chroot /mnt /bin/bash
安装nano编辑器
# pacman -S nano
设置系统语言
# nano /etc/locale.gen  -- 去掉以下两行前的注释：
en_US.UTF-8 UTF-8
zh_CN.UTF-8 UTF-8
# locale-gen   -- 生成区域语言文件
echo LANG=en_US.UTF-8 &amp;gt; /etc/locale.conf
export LANG=en_US.UTF-8
设置时区
# ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
# hwclock --systohc --utc         -- 调整硬件时钟
更改主机名
# echo trevor &amp;gt; /etc/hostname
安装ssh服务
# pacman -Sy openssh
# systemctl enable sshd.serice
更改root密码
# passwd root
添加新用户
# useradd -m -g users -G wheel -s /bin/bash trevor
# passwd trevor
# nano /etc/sudoers # 添加超级权限 在root ALL=(ALL) ALL后添加一行：
trevor ALL=(ALL) ALL
#配置引导
# grub-install /dev/sda
# grub-mkconfig -o /boot/grub/grub.cfg
#创建一个初始 RAM disk
mkinitcpio -p linux
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此，就可以了！&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>M0 M1 M2 M3</title>
      <link>https://trevorch.github.io/post/monetary-economics/m0-m1-m2-m3/</link>
      <pubDate>Sun, 22 Mar 2020 11:49:42 +0800</pubDate>
      
      <guid>https://trevorch.github.io/post/monetary-economics/m0-m1-m2-m3/</guid>
      
        <description>&lt;h3 id=&#34;基础概念&#34;&gt;基础概念&lt;/h3&gt;
&lt;h4 id=&#34;利率&#34;&gt;利率&lt;/h4&gt;
&lt;p&gt;也称“利息率”，指一定时期内利息额与本金额的比率。利率有年利率、月利率和日利率三种表现形式：&lt;br&gt;
年利率：按本金百分比表示，在中国称为“分”；&lt;br&gt;
月利率：按本金千分比表示，在中国称为“厘”；&lt;br&gt;
日利率：按本金万分比表示，在中国称为“毫”。&lt;br&gt;
计算公式：利率=利息额/本金额&lt;/p&gt;
&lt;h4 id=&#34;浮动利率&#34;&gt;浮动利率&lt;/h4&gt;
&lt;p&gt;基准利率是人民银行公布的商业银行存款、贷款、贴现等业务的指导性利率。各金融机构的利率允许：&lt;br&gt;
存款利率可以在基准利率基础上下浮10%；&lt;br&gt;
贷款利率可以在基准利率基础上下浮20%。&lt;/p&gt;
&lt;h3 id=&#34;货币供给与需求&#34;&gt;货币供给与需求&lt;/h3&gt;
&lt;h4 id=&#34;现金&#34;&gt;现金&lt;/h4&gt;
&lt;p&gt;也称“通货”，它：&lt;br&gt;
是政府授权发行的不兑现的银行券和辅币；&lt;br&gt;
是一国的法偿货币；&lt;br&gt;
是央行提供基础货币的主要形式。&lt;/p&gt;
&lt;h4 id=&#34;货币层次&#34;&gt;货币层次&lt;/h4&gt;
&lt;p&gt;根据货币流动性原则，以存款及其信用工具转换为现金所需时间和成本作为标准，对货币划分的层次。&lt;br&gt;
央行为了便于进行宏观经济运行监测和货币政策操作，按照不同的统计口径确定不同的货币供应量。&lt;br&gt;
中国的具体层次如下：
M0=现金；&lt;br&gt;
M1=现金 + 活期存款(一般不包括官方机构和外国银行在商业银行的存款)；&lt;br&gt;
M2=M1 + 准货币 + 可转让存单。准货币指除了活期存款以外的一切公私存款；&lt;br&gt;
M3=M2 + CD + 长于隔夜的限期回购协议和欧洲美元；&lt;br&gt;
M4=M3 + 定期存款 + 私人部门持有的建房互助协会的股份，这是英国英格兰银行公布的一个货币口径；&lt;br&gt;
L=M3 + 非银行公众持有的储蓄券 + 短期国库券 + 商业票据 + 银行承兑票据。&lt;/p&gt;
&lt;h4 id=&#34;狭义货币&#34;&gt;狭义货币&lt;/h4&gt;
&lt;p&gt;流通中的现金与商业银行活期存款的总和，即狭义货币供应量，它是央行制定及执行货币政策的主要观测依据。&lt;br&gt;
现金是法定通货的存在形式；&lt;br&gt;
商业银行活期存款，存款人随时可签发支票进行转让或流通，具有支付手段和流通手段两种职能，存款通货。&lt;br&gt;
侠义货币用M1表示： M1=M0(流通中的货币)+企业活期存款+机关团体部队存款+农村存款。&lt;/p&gt;
&lt;h4 id=&#34;广义货币&#34;&gt;广义货币&lt;/h4&gt;
&lt;p&gt;狭义货币(M1)和商业银行定期存款的总和。&lt;br&gt;
由于各种定期存款一向可以提前支取转化为现实购买力，把它算作货币，可以更全面地反映货币流通状况，便于分析和控制市场金融活动。&lt;br&gt;
以此类推，储蓄存款、可转让定期存单、易转手的短期债券等作为具有通货性质的准货币，也可按其流动性状况囊括进来，通常用M2、M3作代号进行分类统计，依次递增的准货币在流动性上依次递减。&lt;/p&gt;
&lt;h4 id=&#34;基础货币&#34;&gt;基础货币&lt;/h4&gt;
&lt;p&gt;也称“货币基数”、“货币基础”、“强力货币”或“高能货币”，经过商业银行的存货款业务而能扩张或收缩货币供应量的货币。&lt;br&gt;
西方国家的基础货币包括商业银行存入央行的存款准备金(包括法定准备金和超额准备金)与社会公众所持有的现金之和。&lt;br&gt;
央行通过调节基础货币的数量就能数倍扩张或收缩货币供应量，因此：&lt;br&gt;
&lt;strong&gt;基础货币构成市场货币供应量的基础，因其是一种活动力强大的货币，具有高能量，故亦称之为“强力货币”或“高能货币”。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;货币乘数&#34;&gt;货币乘数&lt;/h4&gt;
&lt;p&gt;央行提供的基础货币与货币供应量扩张关系的数量表现。即央行扩大或缩小一定数量的基础货币之后，能使货币供应总量扩大或缩小的比值。亦称基础货币的扩张倍数。&lt;br&gt;
基本计算公式：Ms=Bm&lt;/p&gt;
&lt;h4 id=&#34;超额准备金&#34;&gt;超额准备金&lt;/h4&gt;
&lt;p&gt;商业银行或存款机构在货币当局规定必须缴纳的法定准备金之外，保留的一部分准备金。&lt;br&gt;
商业银行保留超额准备金主要是解决意外的大额提现、结清存款或避免错过更好的投资机会。&lt;br&gt;
&lt;strong&gt;超额准备金的变动将影响到货币的乘数大小，在基础货币供应量不变的情况下，它制约着银行体系创造货币的能力。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;货币流通速度&#34;&gt;货币流通速度&lt;/h4&gt;
&lt;p&gt;同一单位的货币在一定时期内充当流通的次数。&lt;br&gt;
&lt;strong&gt;它是决定商品流通过程中所需要货币量的重要因素之一，并且能在一定程度上弥补流通中货币数量的不足。&lt;/strong&gt;&lt;br&gt;
现实中对货币流通速度测定，主要根据不同层次货币与相应商品的流通，确定各层次货币的流通速度，如：&lt;br&gt;
以商品零售额与现金余额的比值，测定这时期现金的流通速度；
以国民生产总值与M1或M2的比值，测定M1或M2的流通速度。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Go 程序编译成不同平台的执行文件</title>
      <link>https://trevorch.github.io/post/go/env/compile/</link>
      <pubDate>Thu, 19 Mar 2020 19:42:17 +0800</pubDate>
      
      <guid>https://trevorch.github.io/post/go/env/compile/</guid>
      
        <description>&lt;h3 id=&#34;go程序可编译成不同平台的可执行文件&#34;&gt;Go程序可编译成不同平台的可执行文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;set GOARCH=amd64
set GOOS=linux
go build xx.go
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样生成的文件没有任何依赖，直接运行就可以了！&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Docker Machine 安装及配置</title>
      <link>https://trevorch.github.io/post/docker/machine/install/</link>
      <pubDate>Wed, 18 Mar 2020 10:53:44 +0800</pubDate>
      
      <guid>https://trevorch.github.io/post/docker/machine/install/</guid>
      
        <description>&lt;h2 id=&#34;安装virtualbox&#34;&gt;安装VirtualBox&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://download.virtualbox.org/virtualbox/6.1.4/VirtualBox-6.1.4-136177-Win.exe&#34;&gt;https://download.virtualbox.org/virtualbox/6.1.4/VirtualBox-6.1.4-136177-Win.exe&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;下载-docker-machine&#34;&gt;下载 Docker Machine&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/docker/machine/releases/download/v0.16.2/docker-machine-Windows-x86_64.exe&#34;&gt;https://github.com/docker/machine/releases/download/v0.16.2/docker-machine-Windows-x86_64.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;放置至 D:\Docker\Machine\0.16.2 并重命名为 dm.exe
&lt;img src=&#34;https://trevorch.github.io/static/images/docker/docker-machine/install/01.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置环境变量&#34;&gt;配置环境变量&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;把 D:\Docker\Machine\0.16.2 添加到path环境变量；&lt;/li&gt;
&lt;li&gt;删除path环境变量中带OpenSSH的项，否则会导致Docker Machine卡在  Waiting for an IP&amp;hellip;;&lt;/li&gt;
&lt;li&gt;新建环境变量 MACHINE_STORAGE_PATH 指定docker机器存储位置。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;boot2dockeriso-镜像配置&#34;&gt;boot2docker.iso 镜像配置&lt;/h2&gt;
&lt;p&gt;下载最新版nginx:
&lt;a href=&#34;http://nginx.org/download/nginx-1.17.9.zip&#34;&gt;http://nginx.org/download/nginx-1.17.9.zip&lt;/a&gt;
解压nginx至某一目录，并启动nginx&lt;/p&gt;
&lt;p&gt;下载最新版boot2docker.iso:
&lt;a href=&#34;https://github.com/boot2docker/boot2docker/releases&#34;&gt;https://github.com/boot2docker/boot2docker/releases&lt;/a&gt;
放置于nginx的html目录中&lt;/p&gt;
&lt;h2 id=&#34;使用docker-machine部署一台机器&#34;&gt;使用Docker Machine部署一台机器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开cmd命令行界面，输入命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;dm create  -d &amp;quot;virtualbox&amp;quot; \
--engine-registry-mirror https://3laho3y3.mirror.aliyuncs.com \
--engine-registry-mirror http://f1361db2.m.daocloud.io \
--engine-registry-mirror https://reg-mirror.qiniu.com \
--engine-registry-mirror http://hub-mirror.c.163.com \
--engine-registry-mirror https://registry.docker-cn.com \
--engine-registry-mirror https://mirror.ccs.tencentyun.com \
--engine-registry-mirror https://dockerhub.azk8s.cn \
--virtualbox-memory &amp;quot;2048&amp;quot; \
--virtualbox-boot2docker-url http://localhost/tool/boot2docker.iso  \
vm1
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;执行过程如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;C:\Users\Trevorch&amp;gt;dm create  -d &amp;quot;virtualbox&amp;quot; --engine-registry-mirror https://3laho3y3.mirror.aliyuncs.com --engine-registry-mirror http://f1361db2.m.daocloud.io --engine-registry-mirror https://reg-mirror.qiniu.com --engine-registry-mirror http://hub-mirror.c.163.com --engine-registry-mirror https://registry.docker-cn.com --engine-registry-mirror https://mirror.ccs.tencentyun.com --engine-registry-mirror https://dockerhub.azk8s.cn --virtualbox-memory &amp;quot;2048&amp;quot; --virtualbox-boot2docker-url http://localhost/tool/boot2docker.iso  vm1
Running pre-create checks...
Creating machine...
(vm1) Downloading F:\vms\cache\boot2docker.iso from http://localhost/tool/boot2docker.iso...
(vm1) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
(vm1) Creating VirtualBox VM...
(vm1) Creating SSH key...
(vm1) Starting the VM...
(vm1) Check network to re-create if needed...
(vm1) Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar.
(vm1) Waiting for an IP...
Waiting for machine to be running, this may take a few minutes...
Detecting operating system of created instance...
Waiting for SSH to be available...
Detecting the provisioner...
Provisioning with boot2docker...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: dm env vm1
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;登录docker机器并查看环境信息：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;C:\Users\Trevorch&amp;gt;dm ssh vm1
   ( &#39;&amp;gt;&#39;)
  /) TC (\   Core is distributed with ABSOLUTELY NO WARRANTY.
 (/-_--_-\)           www.tinycorelinux.net

docker@vm1:~$ docker info
Client:
 Debug Mode: false

Server:
 Containers: 1
  Running: 1
  Paused: 0
  Stopped: 0
 Images: 1
 Server Version: 19.03.5
 Storage Driver: overlay2
  Backing Filesystem: extfs
  Supports d_type: true
  Native Overlay Diff: true
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339
 runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657
 init version: fec3683
 Security Options:
  seccomp
   Profile: default
 Kernel Version: 4.14.154-boot2docker
 Operating System: Boot2Docker 19.03.5 (TCL 10.1)
 OSType: linux
 Architecture: x86_64
 CPUs: 1
 Total Memory: 1.951GiB
 Name: vm1
 ID: 7SHL:Y3WY:Z4WI:B7ZY:LSTV:CT6J:ZFZU:MH2A:MFSP:4GE4:GB4I:R6JE
 Docker Root Dir: /mnt/sda1/var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
  provider=virtualbox
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Registry Mirrors:
  https://3laho3y3.mirror.aliyuncs.com/
  http://f1361db2.m.daocloud.io/
  https://reg-mirror.qiniu.com/
  http://hub-mirror.c.163.com/
  https://registry.docker-cn.com/
  https://mirror.ccs.tencentyun.com/
  https://dockerhub.azk8s.cn/
 Live Restore Enabled: false
 Product License: Community Engine

docker@vm1:~$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此，就可以使用docker环境了！&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Markdown 手册</title>
      <link>https://trevorch.github.io/post/markdown/manual/</link>
      <pubDate>Wed, 18 Mar 2020 10:53:44 +0800</pubDate>
      
      <guid>https://trevorch.github.io/post/markdown/manual/</guid>
      
        <description>&lt;h2 id=&#34;主要内容&#34;&gt;主要内容&lt;/h2&gt;
&lt;blockquote&gt;
&lt;h4 id=&#34;markdown是什么&#34;&gt;Markdown&lt;em&gt;是什么&lt;/em&gt;？&lt;/h4&gt;
&lt;h4 id=&#34;谁创造了它&#34;&gt;&lt;em&gt;谁&lt;/em&gt;创造了它？&lt;/h4&gt;
&lt;h4 id=&#34;为什么要使用它&#34;&gt;&lt;em&gt;为什么&lt;/em&gt;要使用它？&lt;/h4&gt;
&lt;h4 id=&#34;怎么使用&#34;&gt;&lt;em&gt;怎么&lt;/em&gt;使用？&lt;/h4&gt;
&lt;h4 id=&#34;谁在用&#34;&gt;&lt;em&gt;谁&lt;/em&gt;在用？&lt;/h4&gt;
&lt;h4 id=&#34;尝试一下&#34;&gt;尝试一下&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;h3 id=&#34;1-markdown是什么&#34;&gt;1. Markdown&lt;em&gt;是什么&lt;/em&gt;？&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt;是一种轻量级&lt;strong&gt;标记语言&lt;/strong&gt;，它以纯文本形式(&lt;em&gt;易读、易写、易更改&lt;/em&gt;)编写文档，并最终以HTML格式发布。 &lt;br&gt;
&lt;strong&gt;Markdown&lt;/strong&gt;也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。&lt;/p&gt;
&lt;h3 id=&#34;2-谁创造了它&#34;&gt;2. &lt;em&gt;谁&lt;/em&gt;创造了它？&lt;/h3&gt;
&lt;p&gt;它由&lt;a href=&#34;http://www.aaronsw.com/&#34;&gt;&lt;strong&gt;Aaron Swartz&lt;/strong&gt;&lt;/a&gt;和&lt;strong&gt;John Gruber&lt;/strong&gt;共同设计，&lt;strong&gt;Aaron Swartz&lt;/strong&gt;就是那位于去年（&lt;em&gt;2013年1月11日&lt;/em&gt;）自杀,有着&lt;strong&gt;开挂&lt;/strong&gt;一般人生经历的程序员。维基百科对他的&lt;a href=&#34;http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8&#34;&gt;介绍&lt;/a&gt;是：&lt;strong&gt;软件工程师、作家、政治组织者、互联网活动家、维基百科人&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;他有着足以让你跪拜的人生经历：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;14岁&lt;/strong&gt;参与RSS 1.0规格标准的制订。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2004&lt;/strong&gt;年入读&lt;strong&gt;斯坦福&lt;/strong&gt;，之后退学。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2005&lt;/strong&gt;年创建&lt;a href=&#34;http://infogami.org/&#34;&gt;Infogami&lt;/a&gt;，之后与&lt;a href=&#34;http://www.reddit.com/&#34;&gt;Reddit&lt;/a&gt;合并成为其合伙人。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2010&lt;/strong&gt;年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2011&lt;/strong&gt;年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2013&lt;/strong&gt;年1月自杀身亡。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorch.github.io/static/images/markdown/manual/Aaron_Swartz.jpg&#34; alt=&#34;Aaron Swartz&#34;&gt;&lt;/p&gt;
&lt;p&gt;天才都有早逝的归途。&lt;/p&gt;
&lt;h3 id=&#34;3-为什么要使用它&#34;&gt;3. &lt;em&gt;为什么&lt;/em&gt;要使用它？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;它是易读（看起来舒服）、易写（语法简单）、易更改&lt;strong&gt;纯文本&lt;/strong&gt;。处处体现着&lt;strong&gt;极简主义&lt;/strong&gt;的影子。&lt;/li&gt;
&lt;li&gt;兼容HTML，可以转换为HTML格式发布。&lt;/li&gt;
&lt;li&gt;跨平台使用。&lt;/li&gt;
&lt;li&gt;越来越多的网站支持Markdown。&lt;/li&gt;
&lt;li&gt;更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）&lt;/li&gt;
&lt;li&gt;摆脱Word（我不是认真的）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-怎么使用&#34;&gt;4. &lt;em&gt;怎么&lt;/em&gt;使用？&lt;/h3&gt;
&lt;p&gt;如果不算&lt;strong&gt;扩展&lt;/strong&gt;，Markdown的语法绝对&lt;strong&gt;简单&lt;/strong&gt;到让你爱不释手。&lt;/p&gt;
&lt;p&gt;Markdown语法主要分为如下几大部分：
&lt;strong&gt;标题&lt;/strong&gt;，&lt;strong&gt;段落&lt;/strong&gt;，&lt;strong&gt;区块引用&lt;/strong&gt;，&lt;strong&gt;代码区块&lt;/strong&gt;，&lt;strong&gt;强调&lt;/strong&gt;，&lt;strong&gt;列表&lt;/strong&gt;，&lt;strong&gt;分割线&lt;/strong&gt;，&lt;strong&gt;链接&lt;/strong&gt;，&lt;strong&gt;图片&lt;/strong&gt;，&lt;strong&gt;反斜杠 &lt;code&gt;\&lt;/code&gt;&lt;/strong&gt;，&lt;strong&gt;符号&#39;`&amp;rsquo;&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;41-标题&#34;&gt;4.1 标题&lt;/h4&gt;
&lt;p&gt;两种形式：&lt;br&gt;
1）使用&lt;code&gt;=&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;标记一级和二级标题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一级标题&lt;br&gt;
&lt;code&gt;=========&lt;/code&gt;&lt;br&gt;
二级标题 &lt;br&gt;
&lt;code&gt;---------&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&#34;一级标题&#34;&gt;一级标题&lt;/h1&gt;
&lt;h2 id=&#34;二级标题&#34;&gt;二级标题&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;2）使用&lt;code&gt;#&lt;/code&gt;，可表示1-6级标题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 一级标题&lt;br&gt;
## 二级标题&lt;br&gt;
### 三级标题&lt;br&gt;
#### 四级标题&lt;br&gt;
##### 五级标题&lt;br&gt;
###### 六级标题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&#34;一级标题-1&#34;&gt;一级标题&lt;/h1&gt;
&lt;h2 id=&#34;二级标题-1&#34;&gt;二级标题&lt;/h2&gt;
&lt;h3 id=&#34;三级标题&#34;&gt;三级标题&lt;/h3&gt;
&lt;h4 id=&#34;四级标题&#34;&gt;四级标题&lt;/h4&gt;
&lt;h5 id=&#34;五级标题&#34;&gt;五级标题&lt;/h5&gt;
&lt;h6 id=&#34;六级标题&#34;&gt;六级标题&lt;/h6&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;42-段落&#34;&gt;4.2 段落&lt;/h4&gt;
&lt;p&gt;段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用&lt;strong&gt;两个以上&lt;/strong&gt;空格加上回车（引用中换行省略回车）。&lt;/p&gt;
&lt;h4 id=&#34;43-区块引用&#34;&gt;4.3 区块引用&lt;/h4&gt;
&lt;p&gt;在段落的每行或者只在第一行使用符号&lt;code&gt;&amp;gt;&lt;/code&gt;,还可使用多个嵌套引用，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;gt; 区块引用&lt;br&gt;
&amp;gt;&amp;gt; 嵌套引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区块引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;嵌套引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;44-代码区块&#34;&gt;4.4 代码区块&lt;/h4&gt;
&lt;p&gt;代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如 &lt;br&gt;
普通段落：&lt;/p&gt;
&lt;p&gt;void main() &lt;br&gt;
{ &lt;br&gt;
printf(&amp;ldquo;Hello, Markdown.&amp;quot;); &lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;代码区块：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void main()
{
    printf(&amp;quot;Hello, Markdown.&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;:需要和普通段落之间存在空行。&lt;/p&gt;
&lt;h4 id=&#34;45-强调&#34;&gt;4.5 强调&lt;/h4&gt;
&lt;p&gt;在强调内容两侧分别加上&lt;code&gt;*&lt;/code&gt;或者&lt;code&gt;_&lt;/code&gt;，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*斜体*，_斜体_ &lt;br&gt;
**粗体**，__粗体__&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;，&lt;em&gt;斜体&lt;/em&gt; &lt;br&gt;
&lt;strong&gt;粗体&lt;/strong&gt;，&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;46-列表&#34;&gt;4.6 列表&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;·&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;、或&lt;code&gt;-&lt;/code&gt;标记无序列表，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-（+*） 第一项
-（+*） 第二项
- （+*）第三项&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。&lt;/p&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第一项&lt;/li&gt;
&lt;li&gt;第二项&lt;/li&gt;
&lt;li&gt;第三项&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;有序列表的标记方式是将上述的符号换成数字,并辅以&lt;code&gt;.&lt;/code&gt;，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 . 第一项&lt;br&gt;
2 . 第二项 &lt;br&gt;
3 . 第三项&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;第一项&lt;/li&gt;
&lt;li&gt;第二项&lt;/li&gt;
&lt;li&gt;第三项&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;47-分割线&#34;&gt;4.7 分割线&lt;/h4&gt;
&lt;p&gt;分割线最常使用就是三个或以上&lt;code&gt;*&lt;/code&gt;，还可以使用&lt;code&gt;-&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;48-链接&#34;&gt;4.8 链接&lt;/h4&gt;
&lt;p&gt;链接可以由两种形式生成：&lt;strong&gt;行内式&lt;/strong&gt;和&lt;strong&gt;参考式&lt;/strong&gt;。 &lt;br&gt;
&lt;strong&gt;行内式&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[younghz的Markdown库](https:://github.com/younghz/Markdown &amp;ldquo;Markdown&amp;rdquo;)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https:://github.com/younghz/Markdown&#34; title=&#34;Markdown&#34;&gt;younghz的Markdown库&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考式&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[younghz的Markdown库1][1] &lt;br&gt;
[younghz的Markdown库2][2] &lt;br&gt;
[1]:https:://github.com/younghz/Markdown &amp;ldquo;Markdown&amp;rdquo; &lt;br&gt;
[2]:https:://github.com/younghz/Markdown &amp;ldquo;Markdown&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https:://github.com/younghz/Markdown&#34; title=&#34;Markdown&#34;&gt;younghz的Markdown库1&lt;/a&gt; &lt;br&gt;
&lt;a href=&#34;https:://github.com/younghz/Markdown&#34; title=&#34;Markdown&#34;&gt;younghz的Markdown库2&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：上述的&lt;code&gt;[1]:https:://github.com/younghz/Markdown &amp;quot;Markdown&amp;quot;&lt;/code&gt;不出现在区块中。&lt;/p&gt;
&lt;h4 id=&#34;49-图片&#34;&gt;4.9 图片&lt;/h4&gt;
&lt;p&gt;添加图片的形式和链接相似，只需在链接的基础上前方加一个&lt;code&gt;！&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;410-反斜杠&#34;&gt;4.10 反斜杠&lt;code&gt;\&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;相当于&lt;strong&gt;反转义&lt;/strong&gt;作用。使符号成为普通符号。&lt;/p&gt;
&lt;h4 id=&#34;411-符号&#34;&gt;4.11 符号&#39;`&amp;rsquo;&lt;/h4&gt;
&lt;p&gt;起到标记作用。如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;`ctrl+a`&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ctrl+a&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;5-谁在用&#34;&gt;5. &lt;em&gt;谁&lt;/em&gt;在用？&lt;/h4&gt;
&lt;p&gt;Markdown的使用者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;简书&lt;/li&gt;
&lt;li&gt;Stack Overflow&lt;/li&gt;
&lt;li&gt;Apollo&lt;/li&gt;
&lt;li&gt;Moodle&lt;/li&gt;
&lt;li&gt;Reddit&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-尝试一下&#34;&gt;6. 尝试一下&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;下的插件诸如&lt;code&gt;stackedit&lt;/code&gt;与&lt;code&gt;markdown-here&lt;/code&gt;等非常方便，也不用担心平台受限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在线&lt;/strong&gt;的dillinger.io评价也不错&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windowns&lt;/strong&gt;下的MarkdownPad也用过，不过免费版的体验不是很好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;下的Mou是国人贡献的，口碑很好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;下的ReText不错。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;当然，最终境界永远都是笔下是语法，心中格式化 :)。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。
虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]
(&lt;a href=&#34;http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/&#34;&gt;http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/&lt;/a&gt; )。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以上基本是所有traditonal markdown的语法。&lt;/p&gt;
&lt;h3 id=&#34;其它&#34;&gt;其它：&lt;/h3&gt;
&lt;p&gt;列表的使用(非traditonal markdown)：&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;|&lt;/code&gt;表示表格纵向边界，表头和表内容用&lt;code&gt;-&lt;/code&gt;隔开，并可用&lt;code&gt;:&lt;/code&gt;进行对齐设置，两边都有&lt;code&gt;:&lt;/code&gt;则表示居中，若不加&lt;code&gt;:&lt;/code&gt;则默认左对齐。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;代码库&lt;/th&gt;
&lt;th&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;MarkDown&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/younghz/Markdown&#34; title=&#34;Markdown&#34;&gt;https://github.com/younghz/Markdown&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;MarkDownCopy&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/younghz/Markdown&#34; title=&#34;Markdown&#34;&gt;https://github.com/younghz/Markdown&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关于其它扩展语法可参见具体工具的使用说明。&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
